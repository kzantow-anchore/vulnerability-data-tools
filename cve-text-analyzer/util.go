package main

import (
	"encoding/csv"
	"os"
	"runtime"

	"github.com/dustin/go-humanize"
	"github.com/mitchellh/go-homedir"

	"github.com/anchore/vulnerability-data-tools/cve-text-analyzer/internal/util"
)

func readFirstColumnFromCSVFile(csvFile string) []string {
	var cves []string
	rdr := csv.NewReader(util.Get(os.Open(util.Get(homedir.Expand(csvFile)))))
	_, _ = rdr.Read() // skip headers
	for row, err := rdr.Read(); err == nil; row, err = rdr.Read() {
		cves = append(cves, row[0])
	}
	return cves
}

func printMemoryUsage() {
	memStats := runtime.MemStats{}
	runtime.ReadMemStats(&memStats)
	util.Log("used memory:", humanize.Bytes(memStats.Alloc))
}

func clone(repo string) {
	if _, err := os.ReadDir(repoDir(repo)); err == nil {
		util.Run(repoDir(repo), "git pull")
	} else {
		util.Run(tmpDir, "git clone --depth=1", repo)
	}
}
