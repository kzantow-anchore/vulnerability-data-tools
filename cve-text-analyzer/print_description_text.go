package main

import (
	"encoding/csv"
	"fmt"
	"io"
	"os"
	"strings"

	"github.com/anchore/go-sync"
	"github.com/anchore/vulnerability-data-tools/cve-text-analyzer/internal/reader/cve"
	"github.com/anchore/vulnerability-data-tools/cve-text-analyzer/internal/util"
)

func printDescriptionTextUsedForCpe(cpe string, writer io.Writer) {
	rdr := csv.NewReader(util.Get(os.Open(indexFile)))
	// skip header row
	_, _ = rdr.Read() // skip headers
	for row, err := rdr.Read(); err == nil; row, err = rdr.Read() {
		if cpe == row[0] {
			for _, cveId := range strings.Split(row[1], " ") {
				file := cveFileFullPath(cveListDir, cveId)
				records := cve.ReadSingleIDProducts(sync.NewExecutor(0), file)
				var text []string
				for _, r := range records {
					text = append(text, r.Text...)
				}

				_, _ = fmt.Fprintf(writer, "%s:", file)
				_, _ = fmt.Fprintln(writer)
				for _, part := range text {
					_, _ = fmt.Fprintf(writer, "    %s", part)
					_, _ = fmt.Fprintln(writer)
				}
			}
			return
		}
	}
}
